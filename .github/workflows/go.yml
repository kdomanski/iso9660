name: Go
on:
  push:
    branches:
      - main
      - master
  pull_request:
jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go: ['1.16', '1.17', '1.18']
        os: [ubuntu-latest, windows-latest]
    steps:

    - name: Set up Go ${{ matrix.go }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Check formatting
      if: matrix.os == 'ubuntu-latest'
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          gofmt -s -d .
          exit 1
        fi

    - name: Build
      run: go build -v .

    - name: Integration test (Linux)
      if: matrix.os == 'ubuntu-latest'
      # The test need sudo to be able to mount/umount
      run: sudo go test -v --tags=integration -coverprofile=coverage.txt -covermode=atomic .

    - name: Integration test (Windows)
      if: matrix.os == 'windows-latest'
      run: go test -v --tags=integration -coverprofile="coverage.txt" -covermode=atomic .

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2

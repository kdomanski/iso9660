name: Writer integration test
on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      go:
        required: false
        default: 1.20
        type: string
jobs:
  create:
    name: Create image
    runs-on: ${{ inputs.os }}
    steps:
    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ inputs.go }}
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
    - name: Create image
      run: go test -v --tags=integration,integration_create --coverprofile=coverage_integration_create.txt --covermode=atomic .
      env:
        ISO_WRITER_TEST_IMAGE: ${{ runner.temp }}/writer_test.iso
    - name: Save created
      uses: actions/upload-artifact@v3
      with:
        path: ${{ runner.temp }}/writer_test.iso
        name: writer_test_${{ inputs.os }}.iso
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        files: coverage_integration_create.txt

  test_verify:
    name: Verify image
    runs-on: ubuntu-latest
    needs: create
    steps:
    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ inputs.go }}
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
    - name: Download a single artifact
      uses: actions/download-artifact@v3
      with:
        name: writer_test_${{ inputs.os }}.iso
    - name: Integration test - verify image
      # The test need sudo to be able to mount/umount
      run: sudo ISO_WRITER_TEST_IMAGE=${ISO_WRITER_TEST_IMAGE} go test -v --tags=integration,integration_verify -coverprofile=coverage_integration_verify.txt -covermode=atomic .
      env:
        ISO_WRITER_TEST_IMAGE: writer_test.iso
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        files: coverage_integration_verify.txt
